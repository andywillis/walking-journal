{"version":3,"file":"index-919110fe.js","sources":["../../src/components/Footer/index.jsx","../../src/components/Icon/index.jsx","../../src/helpers/getWalks.js","../../src/store/index.js","../../src/components/Header/index.jsx","../../src/components/List/index.jsx","../../src/components/Map/index.jsx","../../src/components/Main/index.jsx","../../src/hooks/useTheme.js","../../src/App.jsx","../../src/main.jsx"],"sourcesContent":["import style from './style.module.css';\n\nfunction Footer() {\n  return (\n    <footer class={style.footer}>\n      Â© Andy Willis {new Date().getFullYear()}\n    </footer>\n  );\n}\n\nexport default Footer;\n","import classNames from 'classnames';\n\nimport style from './index.module.css';\n\nfunction Icon({ type, label, handleClick, disabled }) {\n\n  const cn = classNames([\n    style.icon,\n    style[type]\n  ]);\n\n  return (\n    <button\n      type=\"button\"\n      aria-label={label}\n      class={cn}\n      data-type={type}\n      onClick={handleClick}\n      disabled={disabled}\n    />\n  );\n\n}\n\nexport default Icon;\n","function getWalks(walks) {\n  return walks.map(walk => {\n    const { id, name, distance, unit } = walk;\n    return { id, name, distance, unit };\n  });\n}\n\nexport default getWalks;\n","import { signal } from '@preact/signals';\n\nimport data from '../data/geodata_distance.json';\n\nimport { getWalks } from '../helpers';\n\nexport const darkMode = signal(false);\nexport const geoData = signal(data);\nexport const walks = signal(getWalks(geoData.value));\nexport const currentWalk = signal(1);\n","import Icon from '../Icon';\n\nimport { darkMode } from '../../store';\n\nimport style from './style.module.css';\n\nfunction handleClick() {\n  darkMode.value = !darkMode.peek();\n}\n\nfunction Header() {\n  return (\n    <header class={style.header}>\n      <h1>Walking Map</h1>\n      <section class={style.icons}>\n        <Icon\n          type=\"light\"\n          label=\"Switch to light mode\"\n          handleClick={handleClick}\n          disabled={!darkMode.value}\n        />\n        <Icon\n          type=\"dark\"\n          label=\"Switch to dark mode\"\n          handleClick={handleClick}\n          disabled={darkMode.value}\n        />\n      </section>\n    </header>\n  );\n}\n\nexport default Header;\n","import classNames from 'classnames';\nimport style from './style.module.css';\n\nimport { walks, currentWalk } from '../../store';\n\nfunction handleClick(id) {\n  currentWalk.value = Number(id);\n}\n\nfunction List() {\n  return (\n    <section class={style.listContainer}>\n      <header>\n        <h4>List of walks</h4>\n      </header>\n      <section class={style.list}>\n        {walks.value.map(walk => {\n\n          const { id, name, distance, unit } = walk;\n\n          const walkCn = classNames({\n            [style.item]: true,\n            [style.highlighted]: id === currentWalk.value\n          });\n\n          return (\n            <button\n              key={id}\n              type=\"button\"\n              class={walkCn}\n              onClick={() => handleClick(id)}\n            >{id}: {name} ({distance}{unit})\n            </button>\n          );\n        })}\n      </section>\n    </section>\n  );\n}\n\nexport default List;\n","import { useEffect, useRef } from 'preact/hooks';\nimport { effect } from '@preact/signals';\nimport * as L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nimport { geoData, currentWalk } from '../../store';\n\nimport style from './style.module.css';\n\nconst myStyle = {\n  color: '#ff7800',\n  weight: 5,\n  opacity: 0.65\n};\n\nfunction Map() {\n\n  const mapRef = useRef();\n\n  useEffect(() => {\n\n    const home = [ 51.275710, 1.336495 ];\n\n    mapRef.current = L.map('mapid', { dragging: !L.Browser.mobile }).setView(home, 12);\n\n    L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      attribution:\n        '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors',\n      maxZoom: 18,\n      minZoom: 3,\n      bounds: [\n        [ -180, 180 ],\n        [ 180, -180 ]\n      ]\n    }).addTo(mapRef.current);\n\n    // const features = L.geoJSON(geoData.value, { style: myStyle }).addTo(mapRef.current);\n    // mapRef.current.fitBounds(features.getBounds());\n\n    effect(() => {\n\n      // const coords = geoData.value.features.map(obj => {\n      //   const [ lng, lat ] = obj.geometry.coordinates;\n      //   return [ lat, lng ];\n      // });\n\n      const walk = geoData.value.find(obj => {\n        return obj.id === currentWalk.value;\n      });\n\n      // console.log(geoData.value.features[1])\n\n      const line = L.geoJSON(walk.geodata, { style: myStyle }).addTo(mapRef.current);\n      // const line = L.polyline(coords, myStyle).addTo(mapRef.current);\n\n      mapRef.current.fitBounds(line.getBounds());\n\n    });\n\n  }, []);\n\n  return (\n    <section ref={mapRef} class={style.mapContainer} id=\"mapid\" />\n  );\n\n}\n\nexport default Map;\n","import List from '../List';\nimport Map from '../Map';\n\nimport style from './style.module.css';\n\nfunction Main() {\n  return (\n    <main class={style.main}>\n      <List />\n      <Map />\n    </main>\n  );\n}\n\nexport default Main;\n","import { darkMode } from '../store';\n\nexport default function useTheme() {\n  document.documentElement.className = darkMode.value ? 'dark' : 'light';\n}\n","import { Footer, Header, Main } from './components';\n\nimport useTheme from './hooks/useTheme';\n\nfunction App() {\n\n  useTheme();\n\n  return (\n    <>\n      <Header />\n      <Main />\n      <Footer />\n    </>\n  );\n\n}\n\nexport default App;\n","import { render } from 'preact';\n\nimport App from './App';\n\nrender(<App />, document.body);\n"],"names":["Footer","_jsxs","class","style","footer","children","Date","getFullYear","Icon","type","label","handleClick","disabled","cn","classNames","icon","_jsx","onClick","getWalks","walks","map","walk","id","name","distance","unit","darkMode","signal","geoData","data","value","currentWalk","peek","Header","header","icons","Number","List","listContainer","list","walkCn","item","highlighted","myStyle","color","weight","opacity","Map","mapRef","useRef","useEffect","home","current","L","dragging","mobile","setView","attribution","maxZoom","minZoom","bounds","addTo","effect","find","obj","line","geodata","fitBounds","getBounds","ref","mapContainer","Main","main","useTheme","document","documentElement","className","App","_Fragment","render","body"],"mappings":"80BAEA,SAASA,GAAS,CAChB,OACEC,EAAA,SAAA,CAAQC,MAAOC,EAAMC,OAAOC,SAAA,CAAC,qBACRC,KAAK,EAAEC,aAAa,CAAA,CACjC,CAEZ,sHCJA,SAASC,EAAK,CAAEC,KAAAA,EAAMC,MAAAA,EAAOC,YAAAA,EAAaC,SAAAA,CAAS,EAAG,CAE9CC,MAAAA,EAAKC,EAAW,CACpBX,EAAMY,KACNZ,EAAMM,CAAI,CAAC,CACZ,EAED,OACEO,EAAA,SAAA,CACEP,KAAK,SACL,aAAYC,EACZR,MAAOW,EACP,YAAWJ,EACXQ,QAASN,EACTC,SAAAA,CAAAA,CACD,CAGL,gsKCtBA,SAASM,EAASC,EAAO,CACvB,OAAOA,EAAMC,IAAIC,GAAQ,CACvB,KAAM,CAAEC,GAAAA,EAAIC,KAAAA,EAAMC,SAAAA,EAAUC,KAAAA,CAAM,EAAGJ,EACrC,MAAO,CAAEC,GAAAA,EAAIC,KAAAA,EAAMC,SAAAA,EAAUC,KAAAA,EAC/B,CAAC,CACH,CCCO,MAAMC,EAAWC,EAAO,EAAK,EACvBC,EAAUD,EAAOE,CAAI,EACrBV,EAAQQ,EAAOT,EAASU,EAAQE,KAAK,CAAC,EACtCC,EAAcJ,EAAO,CAAC,8DCHnC,SAAShB,GAAc,CACZmB,EAAAA,MAAQ,CAACJ,EAASM,KAAK,CAClC,CAEA,SAASC,GAAS,CAChB,OACEhC,EAAA,SAAA,CAAQC,MAAOC,EAAM+B,OAAO7B,UAC1BW,EAAA,KAAA,CAAAX,SAAI,aAAA,CAAe,EACnBJ,EAAA,UAAA,CAASC,MAAOC,EAAMgC,MAAM9B,SAAA,CAC1BW,EAACR,EAAI,CACHC,KAAK,QACLC,MAAM,uBAAA,YACNC,EACAC,SAAU,CAACc,EAASI,KAAAA,CACrB,EACDd,EAACR,EAAI,CACHC,KAAK,OACLC,MAAM,sBAAA,YACNC,EACAC,SAAUc,EAASI,KAAAA,CACpB,CAAC,CAAA,CACK,CAAC,CAAA,CACJ,CAEZ,iJCzBA,SAASnB,EAAYW,EAAI,CACXQ,EAAAA,MAAQM,OAAOd,CAAE,CAC/B,CAEA,SAASe,GAAO,CACd,OACEpC,EAAA,UAAA,CAASC,MAAOC,EAAMmC,cAAcjC,UAClCW,EAAA,SAAA,CAAAX,SACEW,EAAA,KAAA,CAAAX,SAAI,eAAA,CAAiB,CAAA,CACf,EACRW,EAAA,UAAA,CAASd,MAAOC,EAAMoC,KAAKlC,SACxBc,EAAMW,MAAMV,IAAYC,GAAA,CAEjB,KAAA,CAAEC,GAAAA,EAAIC,KAAAA,EAAMC,SAAAA,EAAUC,KAAAA,CAASJ,EAAAA,EAE/BmB,EAAS1B,EAAW,CACxB,CAACX,EAAMsC,IAAI,EAAG,GACd,CAACtC,EAAMuC,WAAW,EAAGpB,IAAOS,EAAYD,KAAAA,CACzC,EAED,OACE7B,EAAA,SAAA,CAEEQ,KAAK,SACLP,MAAOsC,EACPvB,QAASA,IAAMN,EAAYW,CAAE,EAAEjB,SAC/BiB,CAAAA,EAAG,KAAGC,EAAK,KAAGC,EAAUC,EAAK,GAC/B,GALOH,CAKC,CAAA,CAEX,CAAA,CACM,CAAC,CAAA,CACH,CAEb,+EC7BMqB,EAAU,CACdC,MAAO,UACPC,OAAQ,EACRC,QAAS,GACX,EAEA,SAASC,GAAM,CAEb,MAAMC,EAASC,IAEfC,OAAAA,EAAU,IAAM,CAERC,MAAAA,EAAO,CAAE,SAAW,QAAQ,EAE3BC,EAAAA,QAAUC,EAAEjC,IAAI,QAAS,CAAEkC,SAAU,CAACD,EAAAA,QAAUE,MAAQ,CAAA,EAAEC,QAAQL,EAAM,EAAE,EAEjFE,EAAAA,UAAY,qDAAsD,CAChEI,YACE,0FACFC,QAAS,GACTC,QAAS,EACTC,OAAQ,CACN,CAAE,KAAM,GAAG,EACX,CAAE,IAAK,IAAI,CAAE,CAEhB,CAAA,EAAEC,MAAMb,EAAOI,OAAO,EAKvBU,EAAO,IAAM,CAOX,MAAMzC,EAAOO,EAAQE,MAAMiC,KAAYC,GAC9BA,EAAI1C,KAAOS,EAAYD,KAC/B,EAIKmC,EAAOZ,EAAAA,QAAUhC,EAAK6C,QAAS,CAAE/D,MAAOwC,CAAS,CAAA,EAAEkB,MAAMb,EAAOI,OAAO,EAG7EJ,EAAOI,QAAQe,UAAUF,EAAKG,UAAW,CAAA,CAAA,CAE1C,CAEH,EAAG,CAAE,CAAA,EAGHpD,EAAA,UAAA,CAASqD,IAAKrB,EAAQ9C,MAAOC,EAAMmE,aAAchD,GAAG,OAAA,CAAS,CAGjE,oCC5DA,SAASiD,GAAO,CACd,OACEtE,EAAA,OAAA,CAAMC,MAAOC,EAAMqE,KAAKnE,SAAA,CACtBW,EAACqB,EAAI,CAAA,CAAE,EACPrB,EAAC+B,EAAG,CAAA,CAAE,CAAC,CAAA,CACH,CAEV,CCVe,SAAS0B,GAAW,CACjCC,SAASC,gBAAgBC,UAAYlD,EAASI,MAAQ,OAAS,OACjE,CCAA,SAAS+C,GAAM,CAEJ,OAAAJ,IAGPxE,EAAA6E,EAAA,CAAAzE,UACEW,EAACiB,EAAM,CAAE,CAAA,EACTjB,EAACuD,GAAM,CAAA,EACPvD,EAAChB,GAAQ,CAAA,CAAC,CAAA,CACV,CAGN,CCZA+E,EAAO/D,EAAC6D,EAAG,CAAE,CAAA,EAAGH,SAASM,IAAI"}